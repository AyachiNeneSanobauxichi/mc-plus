@use "sass:map";

.mc-alert {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-radius: var(--mc-radius);
  transition: opacity var(--mc-transition-duration), transform var(--mc-transition-duration);

  &__content {
    display: flex;
    align-items: center;
    flex-grow: 1;
  }

  &__message {
    color: var(--mc-gray-800);

    .mc-alert__title {
      font-size: 16px;
    }

    .mc-alert__description {
      font-size: 14px;
    }
  }

  &__icon {
    margin-right: 8px;
  }

  &__close {
    cursor: pointer;
    opacity: 0.8;
    transition: opacity var(--mc-transition-duration);

    &:hover {
      opacity: 1;
    }
  }

  // Generate type variants
  @each $type in success, info, warning, error {
    &--#{$type} {
      background-color: var(--mc-#{$type}-background);

      .mc-alert__icon {
        color: var(--mc-#{$type});
      }
    }
  }

  // Generate size variants
  $sizes: (
    small: (
      padding: calc(var(--mc-gap) + 2px) calc(var(--mc-gap) * 3),
      font-size: 12px,
      icon-size: 14px,
    ),
    medium: (
      padding: calc(var(--mc-gap) * 2) calc(var(--mc-gap) * 4),
      font-size: 14px,
      icon-size: 16px,
    ),
    large: (
      padding: calc(var(--mc-gap) * 2.5) calc(var(--mc-gap) * 5),
      font-size: 16px,
      icon-size: 18px,
    ),
  );

  @each $size, $props in $sizes {
    &--#{$size} {
      padding: map.get($props, "padding");
      font-size: map.get($props, "font-size");

      .mc-alert__icon,
      .mc-alert__close {
        font-size: map.get($props, "icon-size");
      }
    }
  }
}
